name: Build STTPortable (Windows)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install AutoHotkey (winget first, curl fallback)
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $compilerPath = "C:\Program Files\AutoHotkey\Compiler\Ahk2Exe.exe"
          $basePath     = "C:\Program Files\AutoHotkey\v2\AutoHotkey64.exe"
          $ver          = "2.0.19"
          $url          = "https://github.com/AutoHotkey/AutoHotkey/releases/download/v$ver/AutoHotkey_${ver}_setup.exe"
          $installer    = "$PWD\AutoHotkey_setup.exe"

          function Have-AHK {
            return (Test-Path $compilerPath) -and (Test-Path $basePath)
          }

          # Try winget (preferred; stable on windows-latest)
          try {
            $winget = (Get-Command winget.exe -ErrorAction SilentlyContinue)
            if ($winget) {
              & $winget install --silent --accept-package-agreements --accept-source-agreements AutoHotkey.AutoHotkey
            }
          } catch { Write-Host "winget install failed (will try curl fallback): $($_.Exception.Message)" }

          if (!(Have-AHK)) {
            # Fallback: robust curl download with retries
            Write-Host "Falling back to downloading installer via curl..."
            & curl.exe -L --fail --retry 6 --retry-delay 3 -o $installer $url
            if (!(Test-Path $installer)) { throw "Failed to download AutoHotkey installer." }

            # Inno Setup silent install
            Start-Process -FilePath $installer -ArgumentList "/VERYSILENT","/NORESTART","/SP-" -Wait -PassThru | Out-Null
          }

          if (!(Have-AHK)) {
            throw "AutoHotkey compiler not found after install. Expected:`n$compilerPath`n$basePath"
          }

          "$compilerPath`n$basePath" | Out-File "$env:RUNNER_TEMP\ahk_paths.txt"

      - name: Compile AHK â†’ EXE
        shell: powershell
        run: |
          $paths    = Get-Content "$env:RUNNER_TEMP\ahk_paths.txt"
          $compiler = $paths[0]
          $baseExe  = $paths[1]
          $src      = ".\src\TalkPaste.ahk"
          $outDir   = ".\build"
          $outExe   = "$outDir\TalkPaste.exe"

          if (!(Test-Path $src))   { throw "Source not found: $src" }
          if (!(Test-Path $outDir)){ New-Item -ItemType Directory -Path $outDir | Out-Null }

          & $compiler /in $src /out $outExe /base $baseExe
          if (!(Test-Path $outExe)) { throw "Compilation failed: $outExe not created." }
          Write-Host "Compilation complete: $outExe"

      - name: Create ZIP artifact
        shell: powershell
        run: Compress-Archive -Path ".\build\TalkPaste.exe" -DestinationPath ".\build\TalkPaste.zip" -Force

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: TalkPaste.exe
          path: build/TalkPaste.exe
          if-no-files-found: error
          compression-level: 0

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: TalkPaste.zip
          path: build/TalkPaste.zip
          if-no-files-found: error
