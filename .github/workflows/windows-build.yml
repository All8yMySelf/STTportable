name: Build STTPortable (Windows)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Download the official AutoHotkey v2 installer (includes Ahk2Exe compiler)
      - name: Download AutoHotkey v2 installer
        shell: powershell
        run: |
          $ver    = "2.0.19"
          $url    = "https://github.com/AutoHotkey/AutoHotkey/releases/download/v$ver/AutoHotkey_$ver_setup.exe"
          $dst    = "$PWD\AutoHotkey_setup.exe"
          Invoke-WebRequest -Uri $url -OutFile $dst
          if (!(Test-Path $dst)) { Write-Error "Failed to download AutoHotkey installer." ; exit 1 }

      # Silent install (Inno Setup flags). Requires admin; GitHub runner has it.
      - name: Install AutoHotkey silently
        shell: powershell
        run: |
          $installer = "$PWD\AutoHotkey_setup.exe"
          # Inno Setup: /VERYSILENT /NORESTART /SP-  (no UI, no restart, skip 'This will install' prompt)
          Start-Process -FilePath $installer -ArgumentList "/VERYSILENT","/NORESTART","/SP-" -Wait -PassThru | Out-Null

          $Compiler = "C:\Program Files\AutoHotkey\Compiler\Ahk2Exe.exe"
          $BaseExe  = "C:\Program Files\AutoHotkey\v2\AutoHotkey64.exe"
          if (!(Test-Path $Compiler)) { Write-Error "Ahk2Exe not found at $Compiler"; exit 1 }
          if (!(Test-Path $BaseExe))  { Write-Error "AutoHotkey64.exe not found at $BaseExe"; exit 1 }
          "$Compiler`n$BaseExe" | Out-File "$env:RUNNER_TEMP\ahk_paths.txt"

      - name: Compile AHK â†’ EXE
        shell: powershell
        run: |
          $paths    = Get-Content "$env:RUNNER_TEMP\ahk_paths.txt"
          $Compiler = $paths[0]
          $BaseExe  = $paths[1]
          $Src      = ".\src\TalkPaste.ahk"
          $OutDir   = ".\build"
          $OutExe   = ".\build\TalkPaste.exe"

          if (!(Test-Path $Src)) { Write-Error "Source not found: $Src"; exit 1 }
          if (!(Test-Path $OutDir)) { New-Item -ItemType Directory -Path $OutDir | Out-Null }

          & $Compiler /in $Src /out $OutExe /base $BaseExe
          if (!(Test-Path $OutExe)) { Write-Error "Compilation failed: $OutExe not created." ; exit 1 }
          Write-Host "Compilation complete: $OutExe"

      - name: Create ZIP artifact
        shell: powershell
        run: Compress-Archive -Path ".\build\TalkPaste.exe" -DestinationPath ".\build\TalkPaste.zip" -Force

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: TalkPaste.exe
          path: build/TalkPaste.exe
          if-no-files-found: error
          compression-level: 0

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: TalkPaste.zip
          path: build/TalkPaste.zip
          if-no-files-found: error
